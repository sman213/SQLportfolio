#Create a patient/member table

CREATE TABLE Patients (
  PatientID INT PRIMARY KEY NOT NULL UNIQUE,
  FirstName VARCHAR(50) NOT NULL,
  LastName VARCHAR(50) NOT NULL,
  DOB DATE NOT NULL,
  Address VARCHAR(100) NOT NULL,
  PhoneNumber VARCHAR(15) NOT NULL
);

#Create a Providers table

CREATE TABLE Providers (
  ProviderID INT PRIMARY KEY NOT NULL UNIQUE,
  ProviderName VARCHAR(100) NOT NULL,
  Address VARCHAR(100) NOT NULL,
  PhoneNumber VARCHAR(15) NOT NULL,
  Specialty VARCHAR(50) NOT NULL
);

#Create a Claims table

CREATE TABLE Claims (
  ClaimID INT PRIMARY KEY NOT NULL UNIQUE,
  PatientID INT NOT NULL,
  ProviderID INT NOT NULL,
  ServiceDate DATE NOT NULL,
  ServiceType VARCHAR(50) NOT NULL,
  Amount DECIMAL(10, 2) NOT NULL,
  FOREIGN KEY (PatientID) REFERENCES Patients(PatientID),
  FOREIGN KEY (ProviderID) REFERENCES Providers(ProviderID)
);


#Some random data for each table

INSERT INTO Patients (PatientID, FirstName, LastName, DOB, Address, PhoneNumber)
VALUES
  (1, 'John', 'Doe', '1990-01-01', '123 Main St, Some State USA', '555-1234'),
  (2, 'Jane', 'Smith', '1985-03-15', '456 Oak Ave, Some State USA', '555-5678'),
  (3, 'Bob', 'Johnson', '1975-12-25', '789 Elm St, Some State USA', '555-9101'),
  (4, 'Alice', 'Brown', '2000-05-07', '321 Maple Rd, Some State USA', '555-1212'),
  (5, 'Sam', 'Lee', '1995-09-10', '654 Pine Ln, Some State State USA', '555-1313');


INSERT INTO Providers (ProviderID, ProviderName, Address, PhoneNumber, Specialty)
VALUES
  (1, 'Blah Blah Medical Center', '10 Hospital Dr, Some State USA', '555-2468', 'General Practice'),
  (2, 'Blah Blah Mental Health', '20 Dentist St, Some State USA', '555-3690', 'Mental Health'),
  (3, 'Blah Blah Chiropractic', '30 Spine Rd, Some State USA', '555-4822', 'Chiropractic'),
  (4, 'Blah Blah Vision Center', '40 Eye Ave, Some State USA', '555-5955', 'Optometry'),
  (5, 'Blah Blah Physical Therapy', '50 Mobility Blvd, State USA', '555-7171', 'Physical Therapy');


INSERT INTO Claims (ClaimID, PatientID, ProviderID, ServiceDate, ServiceType, Amount)
VALUES
  (1, 1, 1, '2022-01-01', 'Office Visit', 100.00),
  (2, 2, 2, '2022-01-15', 'Teeth Cleaning', 80.00),
  (3, 3, 3, '2022-02-01', 'Spinal Adjustment', 75.00),
  (4, 4, 4, '2022-02-15', 'Eye Exam', 50.00),
  (5, 5, 5, '2022-03-01', 'Physical Therapy', 200.00),
  (6, 1, 2, '2022-03-15', 'Fillings', 150.00),
  (7, 2, 3, '2022-04-01', 'Massage Therapy', 90.00),
  (8, 3, 4, '2022-04-15', 'Contact Lenses', 100.00),
  (9, 4, 5, '2022-05-01', 'Occupational Therapy', 175.00),
  (10, 5, 1, '2022-05-15', 'Lab Work', 75.00);
  
  
  #Here Are 10 simple SQL query examples with the given datasets
  
#1. Retrieve all patient information
SELECT * FROM Patients;

# 2. Retrieve all claim information for a specific patient
SELECT * FROM Claims WHERE PatientID = 3;

# 3. Retrieve all providers in a specific specialt#
SELECT * FROM Providers WHERE Specialty = 'Optometry';

#4. Retrieve the total amount of claims for a specific provider
SELECT SUM(Amount) AS TotalAmount FROM Claims WHERE ProviderID = 2;

#5. Retrieve all claims with a service date between two dates
SELECT * FROM Claims WHERE ServiceDate BETWEEN '2022-01-01' AND '2022-12-31';

#6. Retrieve all patients and their corresponding claims
SELECT Patients.*, Claims.* FROM Patients
JOIN Claims ON Patients.PatientID = Claims.PatientID;

#7. Retrieve the total amount of claims for each patient
SELECT Patients.FirstName, Patients.LastName, SUM(Claims.Amount) AS TotalAmount FROM Patients
JOIN Claims ON Patients.PatientID = Claims.PatientID
GROUP BY Patients.PatientID;

# 8. Retrieve the number of claims for each service type
SELECT ServiceType, COUNT(*) AS NumClaims FROM Claims
GROUP BY ServiceType;

#9. Retrieve all patients with no claims, since each patient has a claim this wll return nothing
SELECT Patients.* FROM Patients
LEFT JOIN Claims ON Patients.PatientID = Claims.PatientID
WHERE Claims.ClaimID IS NULL;

#10. Retrieve the top 5 providers with the highest total claim amount""
SELECT Providers.ProviderName, SUM(Claims.Amount) AS TotalAmount FROM Providers
JOIN Claims ON Providers.ProviderID = Claims.ProviderID
GROUP BY Providers.ProviderID
ORDER BY TotalAmount DESC
LIMIT 5;


#Here are 10 examples of more complex queries with the dataset

# 1. Display the total amount of claims submitted by each patient, sorted in descending order
SELECT Patients.FirstName, Patients.LastName, SUM(Claims.Amount) AS Total_Claims_Amount
FROM Patients
INNER JOIN Claims ON Patients.PatientID = Claims.PatientID
GROUP BY Patients.PatientID
ORDER BY Total_Claims_Amount DESC;

#2. Display the total amount of claims submitted by each provider, sorted in descending order
SELECT Providers.ProviderName, SUM(Claims.Amount) AS Total_Claims_Amount
FROM Providers
INNER JOIN Claims ON Providers.ProviderID = Claims.ProviderID
GROUP BY Providers.ProviderID
ORDER BY Total_Claims_Amount DESC;

#3. Display the total amount of claims submitted by each specialty, sorted in descending order
SELECT Providers.Specialty, SUM(Claims.Amount) AS Total_Claims_Amount
FROM Providers
INNER JOIN Claims ON Providers.ProviderID = Claims.ProviderID
GROUP BY Providers.Specialty
ORDER BY Total_Claims_Amount DESC;

#4. Display the patients who have submitted more than greater than or equal to 1 claim
SELECT Patients.FirstName, Patients.LastName, COUNT(Claims.ClaimID) AS Total_Claims_Submitted
FROM Patients
INNER JOIN Claims ON Patients.PatientID = Claims.PatientID
GROUP BY Patients.PatientID
HAVING COUNT(Claims.ClaimID) > 3;

#5. Display the patients who have submitted claims with more than $100 in total amount
SELECT Patients.FirstName, Patients.LastName, SUM(Claims.Amount) AS Total_Claims_Amount
FROM Patients
INNER JOIN Claims ON Patients.PatientID = Claims.PatientID
GROUP BY Patients.PatientID
HAVING SUM(Claims.Amount) > 100;

#6. Display the providers who have submitted claims with more than $1,000 in total amount, since im kind and I kept the costs low, this will return nothing
SELECT Providers.ProviderName, SUM(Claims.Amount) AS Total_Claims_Amount
FROM Providers
INNER JOIN Claims ON Providers.ProviderID = Claims.ProviderID
GROUP BY Providers.ProviderID
HAVING SUM(Claims.Amount) > 1000;


#7. Display the patients who have submitted claims for a specific service type
SELECT Patients.FirstName, Patients.LastName, Claims.ServiceType
FROM Patients
INNER JOIN Claims ON Patients.PatientID = Claims.PatientID
WHERE Claims.ServiceType = 'Lab Work';

#8. Display the total amount of claims submitted by patients in each state, sorted in descending order
SELECT SUBSTRING(Address, -2) AS State, SUM(Claims.Amount) AS Total_Claims_Amount
FROM Patients
INNER JOIN Claims ON Patients.PatientID = Claims.PatientID
GROUP BY State
ORDER BY Total_Claims_Amount DESC;

#9. Display the total amount of claims submitted by providers in each specialty, sorted in descending order
SELECT Providers.Specialty, SUM(Claims.Amount) AS Total_Claims_Amount
FROM Providers
INNER JOIN Claims ON Providers.ProviderID = Claims.ProviderID
GROUP BY Providers.Specialty
ORDER BY Total_Claims_Amount DESC;

"""10. This query retrieves information about patients who have medical claims for services rendered by providers in "some state". 
It returns each patient's name, address, the total amount they have paid for medical claims, and the number of unique Mental Health
and Physical Therapy providers they have seen. The query also filters the results to only include patients who have paid more than
$100 in total medical claims, and sorts the results in descending order of the number of Mental Health providers seen and ascending
order of the number of Physical Therapy providers seen."""
SELECT
  p.FirstName,
  p.LastName,
  p.Address,
  SUM(c.Amount) AS TotalAmountPaid,
  (
    SELECT COUNT(DISTINCT p2.ProviderID)
    FROM Claims c2
    INNER JOIN Providers p2 ON c2.ProviderID = p2.ProviderID
    WHERE c2.PatientID = p.PatientID
    AND p2.Specialty = 'Mental Health'
  ) AS NumCardiologyProviders,
  (
    SELECT COUNT(DISTINCT p3.ProviderID)
    FROM Claims c3
    INNER JOIN Providers p3 ON c3.ProviderID = p3.ProviderID
    WHERE c3.PatientID = p.PatientID
    AND p3.Specialty = 'Physical Therapy'
  ) AS NumRadiologyProviders
FROM
  Patients p
  INNER JOIN Claims c ON p.PatientID = c.PatientID
  INNER JOIN Providers pr ON c.ProviderID = pr.ProviderID
WHERE
  p.Address LIKE '%Some State%'
GROUP BY
  p.PatientID
HAVING
   SUM(c.amount) >= 100
ORDER BY
  NumCardiologyProviders DESC,
  NumRadiologyProviders ASC;

